#pragma once
#include <string>
#include <map>

const int HIGH_BAR = 2500;	//Кол-во очков, необходимое для победы
const wstring ROBOT_NAME = L"zX01";	//Имя робота-противника
const wstring HUMAN_DEF_NAME = L"Human";	//Стандартное имя игрока
const LPCWSTR CONSOLE_TITLE = L"ZONK";	//Лейбл окна консоли


const int SW = 70;	//Ширина окна в "пикселях"-символах
const int SH = 31;	//Высота окна
const int GLYPH_SIZE_X = 10;	//Размер "пикселя"-символа по х (в пикселях)
const int GLYPH_SIZE_Y = GLYPH_SIZE_X * 2;	//Размер "пикселя"-символа по y (в пикселях)

//Координаты игровых зон. По индексам:
// 0 - левый х, 1 - левый у
// 2 - правый х, 3 - правый у
const int ZONE_MSG[4] = { 7, 3, 61, 5 };
const int ZONE_DICES[4] = { 7, 11, 35, 19 };
const int ZONE_SCORE[4] = { 42, 11, 61, 19 };
const int ZONE_INPUT[4] = { 7, 25, 35, 25 };

//Координаты позиций костей (левых верхних точкек) в соотв. зоне 
const int DICES_POSITIONS[6][2] =
{
	{ ZONE_DICES[0] + 2,  ZONE_DICES[1] },
	{ ZONE_DICES[0] + 11, ZONE_DICES[1] },
	{ ZONE_DICES[0] + 20, ZONE_DICES[1] },
	{ ZONE_DICES[0] + 2,  ZONE_DICES[1] + 4 },
	{ ZONE_DICES[0] + 11, ZONE_DICES[1] + 4 },
	{ ZONE_DICES[0] + 20, ZONE_DICES[1] + 4 }
};

//Построчное представление отображаемых костей
const wstring ASCII_DICES[7][4] =
{
	{ L"       ", L"       ", L"       ", L"       " },
	{ L"       ", L"│     │", L"│  ●  │", L"│     │" },
	{ L"       ", L"│    ●│", L"│     │", L"│●    │" },
	{ L"       ", L"│●    │", L"│  ●  │", L"│    ●│" },
	{ L"       ", L"│●   ●│", L"│     │", L"│●   ●│" },
	{ L"       ", L"│●   ●│", L"│  ●  │", L"│●   ●│" },
	{ L"       ", L"│●   ●│", L"│●   ●│", L"│●   ●│" }
};

const float PRINT_SPEED = 0.027f;	//Величина задержки после печати одного символа
const float PRINT_PAUSE = 0.5f;	//Величина задержки %p

//Коды цветов
static const short COL_WHITE = 0x000F;
static const short COL_BLACK = 0x0000;
static const short COL_BLUE = 0x000C;
static const short COL_RED = 0x000D;
static const short COL_INV = 0x00F0;
static const short ATR_UNDERLINE = short(0x8000);	//Код подчеркивания

//Реестр сообщений
std::map <std::string, std::wstring> MSG_REGISTRY =
{
	//intro
	{"0_welcome_seq_1", L"Зонк!"},
	{"0_welcome_seq_2", L"Это игра, где кости вершат судьбы"},
	{"0_welcome_seq_3", L"Где человеческий мозг сражается с электронным"},
	{"0_welcome_seq_4", L"Где жадность губит и обогащает"},
	{"0_welcome_seq_5", L"И где Фортуна становится лучшим другом и злейшим врагом"},
	{"0_welcome_seq_6", L"Добро пожаловать!"},

	{"0_playername", L"Итак, давайте познакомимся. %p Как вас зовут?"},

	{"0_nanname1_1", L"Эээм... %p Похоже, вы ничего не ввели!"},
	{"0_nanname1_2", L"Напишите, как вас зовут"},
	{"0_nanname2_1", L"Попробуйте ввести какой-нибудь текст, прежде чем нажать 'Enter'"},
	{"0_nanname3_1", L"Если вам от этого весело, то поверьте мне - %p сама игра намного веселее!"},
	{"0_nanname3_2", L"Поэтому может покончим с этим? %p Не таите, как вас зовут? "},

	{"0_longname1_1", L"Красиво звучит. %p Но может выберем что-то покороче?"},
	{"0_longname1_2", L"Как вас зовут?"},
	{"0_longname2_1", L"Понимаете, мой разработчик дал мне не так много памяти. %p Поэтому я плохо запоминаю такие длинные имена"},
	{"0_longname2_2", L"Введите другое имя"},
	{"0_longname3_1", L"Так, и запас сообщений у меня ограничен. %p Поэтому давайте без шуток, введите имя"},

	{"0_shortname1", L"По-моему немного коротковато. %p Может выберете что - то другое?"},
	{"0_shortname2", L"Слушайте, ну и как это произносить? %p Нет, давайте еще раз"},
	{"0_shortname3", L"... %p %p Да введите же имя чуть длиннее!"},

	{"0_nicetomeet", L"Приятно познакомиться, %s"},
	{"0_oktomeet", L"Вот и отлично! %p Приятно познакомиться, %s"},
	{"0_enougth", L"Достаточно"},
	{"0_stdname", L"В таком случае, я буду называть вас 'Human'"},

	{"0_rules1", L"*перед продолжением рекомендуем ознакомиться с инструкцией, предоставленной с программой*"},
	{"0_rules2", L"%s, правила вы уже должны знать, %p поэтому перейдем к игре!"},

	//game
	{"1_enemy_seq_1", L"Ваш противник – робот zX01. %p И он использует такику."},
	{"1_enemy_seq_2", L"Тактику безжалостную и безошибочную"},
	{"1_enemy_seq_3", L"Не оставляющей сомнений в скорой победе"},
	{"1_enemy_seq_4", L"Способную обыграть Фортуну!"},

	{"1_begin_seq_1", L"Победит тот, кто наберет не менее %s очков" },
	{"1_begin_seq_2", L"Первый ход за вами, %s. %p Пусть победит сильнейший!"},
	{"1_begin_seq_3", L"..."},
	{"1_begin_seq_4", L"Или удачливейший?"},
	
	{"1_win_seq_1", L"%s, вы победили! %p Все-таки удача оказалась на вашей стороне"},
	{"1_win_seq_2", L"Моя работа здесь закончена. %p Заглядывайте еще!"},
	
	{"1_loose_seq_1", L"Похоже, робот оказался сильнее"},
	{"1_loose_seq_2", L"Но не отчаиваетесь %s, %p возможно в другой раз удача улыбнется вам"},

	//action
	{"a_whoturn", L"%s, ходит"},
	{"a_nocombos", L"Нет ни одной комбинации! %p Все очки за ход сгорают!"},
	
	{"a_getpick", L"Выберите кости"},
	{"a_errpick", L"Таких костей нет!"},
	{"a_badpick", L"Некоторые кости не принесли вам очки"},
	{"a_badallpick", L"%s, %p никакие кости не приносят очков!"},
	
	{"a_h_scrtotl", L"Вы всего заработали %s очков"},
	{"a_h_scrpick", L"Вы зарабатываете %s очков"},

	{"a_r_scrtotl", ROBOT_NAME + L" всего заработал %s очков"},
	{"a_r_scrpick", ROBOT_NAME + L" зарабатывает %s очков"},
	
	{"a_robturnC", L"Робот решил ПРОДОЛЖИТЬ ход, взяв эти кости"},
	{"a_robturnE", L"Робот решил ЗАКОНЧИТЬ ход, взяв эти кости"},
	
	{"a_actchoice", L"1 - продолжить ход %n 2 - закончить ход %n 0 - выбрать другие кости"},
	{"a_badans", L"Неправильный ответ"},
};